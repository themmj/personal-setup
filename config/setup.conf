[~/]
    files:
        "../res/.gitignore" "link"
        "../res/.alacritty.yml" "link"
        "../res/.tmux.conf" "link"
    apps:
        [Global gitignore]
            cmds:
                "all" "git config --global core.excludesFile '~/.gitignore'"
        .
        [updates]
            cmds:
                "debian" "sudo apt update && sudo apt upgrade -y"
                "osx" "brew update"
        .
        [zsh]
            packages:
                "all" "zsh"
            cmds:
                "all" "sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --keep-zshrc"
        .
    subdirs:
        [.vim]
            files:
                "../res/vimrc" "link"
        .
        [.vifm]
            files:
                "../res/vifmrc" "link"
            apps:
                [vifm]
                    packages:
                        "all" "vifm"
                .
            subdirs:
                [colors]
                    files:
                        "../res/nord.vifm" "link"
                .
        .
        [development]
            env:
                "DEVPATH" "$HOME/development"
            subdirs:
                [workspaces]
                    env:
                        "WSPATH" "$DEVPATH/workspaces"
                    subdirs:
                        [cpp]
                            files:
                                "../res/macosaliases" "copy"
                            apps:
                                [gcc]
                                    packages:
                                        "debian" "build-essential manpages-dev"
                                        "osx" "gcc"
                                    cmds:
                                        "osx" "cat macosaliases > .env-extended"
                                        "osx" "sudo ln -s /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk /Library/Developer/CommandLineTools/SDKs/MacOSX11.0.sdk"
                                        "osx" "rm macosaliases"
                                .
                                [clangd]
                                    packages:
                                        "all" "zip"
                                    cmds:
                                        "debian" "curl -O -L https://github.com/clangd/clangd/releases/download/11.0.0/clangd-linux-11.0.0.zip"
                                        "debian" "sudo unzip clangd-linux-11.0.0.zip -d /usr/local"
                                        "debian" "rm clangd-linux-11.0.0.zip"
                                        "osx" "curl -O -L https://github.com/clangd/clangd/releases/download/11.0.0/clangd-mac-11.0.0.zip"
                                        "osx" "sudo unzip clangd-mac-11.0.0.zip -d /usr/local"
                                        "osx" "rm clangd-mac-11.0.0.zip"
                                .
                                [gdb]
                                    packages:
                                        "all" "gdb"
                                .
                            env:
                                "CPPPATH" "$WSPATH/cpp"
                            repos:
                                "git@github.com:themmj/tme.git"
                                "git@github.com:themmj/cpp-template.git" "template"
                        .
                        [go]
                            apps:
                                [golang]
                                    cmds:
                                        "osx" "curl -O -L https://golang.org/dl/go1.15.6.darwin-amd64.pkg"
                                        "osx" "open -W go1.15.6.darwin-amd64.pkg"
                                        "osx" "rm go1.15.6.darwin-amd64.pkg"
                                        "debian" "curl -O -L https://golang.org/dl/go1.15.6.linux-amd64.tar.gz"
                                        "debian" "tar -C /usr/local -xzf go1.15.6.linux-amd64.tar.gz"
                                        "debian" "rm go1.15.6.linux-amd64.tar.gz"
                                .
                            env:
                                "GOPATH" "$WSPATH/go"
                                "GOBIN" "$GOPATH/bin"
                                "PATH" "/usr/local/go/bin" "append"
                                "PATH" "$GOBIN" "append"
                            subdirs:
                                [src]
                                    subdirs:
                                        [kuly]
                                            env:
                                                "KULY_PATH" "$GOPATH/src/kuly"
                                                "CONTROL_PLANE_HOST" "localhost"
                                                "CONTROL_PLANE_PORT" "30000"
                                            repos:
                                                "git@github.com:kulycloud/test-service.git"
                                                "git@github.com:kulycloud/ingress.git"
                                                "git@github.com:kulycloud/common.git"
                                                "git@github.com:kulycloud/load-balancer.git"
                                                "git@github.com:kulycloud/protocol.git"
                                                "git@github.com:kulycloud/storage-redis.git"
                                                "git@github.com:kulycloud/service-manager-k8s.git"
                                                "git@github.com:kulycloud/service-manager-docker.git"
                                                "git@github.com:kulycloud/thesis.git"
                                                "git@github.com:kulycloud/control-plane.git"
                                                "git@github.com:kulycloud/route-processor.git"
                                                "git@github.com:themmj/kuly-scripts.git" "scripts"
                                        .
                                .
                        .
                        [node]
                            apps:
                                [node]
                                    cmds:
                                        "debian" "sudo curl -sL https://deb.nodesource.com/setup_15.x | bash -"
                                    packages:
                                        "debian" "nodejs"
                                        "osx" "node"
                                .
                            env:
                                "NODEPATH" "$WSPATH/node"
                            subdirs:
                                [hopper]
                                    repos:
                                        "git@github.com:hopperteam/hopper-ui.git" "ui"
                                        "git@github.com:hopperteam/hopper-server.git" "server"
                                        "git@github.com:hopperteam/hopper-sp-ui.git" "sp-ui"
                                        "git@github.com:hopperteam/hopper-sp-server.git" "sp-server"
                                        "git@github.com:hopperteam/hopper-doc.git" "doc"
                                .
                        .
                        [rust]
                            apps:
                                [rustup]
                                    cmds:
                                        "all" "sh -c \"$(curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs)\" \"\" -y --no-modify-path"
                                        "all" "mv $HOME/.rustup ./.rustup"
                                        "all" "mv $HOME/.cargo ./.cargo"
                                .
                            env:
                                "RUSTPATH" "$WSPATH/rust"
                                "CARGO_HOME" "$RUSTPATH/.cargo"
                                "RUSTUP_HOME" "$RUSTPATH/.rustup"
                                "PATH" "$CARGO_HOME/bin" "prepend"
                        .
                        [sh]
                            env:
                                "SHPATH" "$WSPATH/sh"
                            repos:
                                "git@github.com:themmj/setup-helper.git"
                                "git@github.com:themmj/personal-setup.git"
                        .
                        [python]
                            apps:
                                [python-plus-pip]
                                    packages:
                                        "debian" "python3-dev python3-pip"
                                        "osx" "python3"
                                .
                            env:
                                "PYTHONPATH" "$WSPATH/python"
                                "PATH" "$HOME/.local/bin" "append"
                        .
                    [latex]
                        apps:
                            [texlive]
                                packages:
                                    "debian" "texlive"
                                    "osx" "mactex"
                            .
                    .
                .
                [tools]
                    env:
                        "TOOLSPATH" "$DEVPATH/tools"
                    repos:
                        "https://github.com/doxygen/doxygen.git"
                        "https://github.com/rust-analyzer/rust-analyzer.git"
                        "https://github.com/alacritty/alacritty.git"
                    apps:
                        [doxygen]
                            packages:
                                "all" "flex bison cmake"
                            cmds:
                                "all" "cd doxygen && mkdir -p build && cd build"
                                "all" "cmake -G \"Unix Makefiles\" .. && make && sudo make install"
                                "all" "cd ../.."
                        .
                        [thefuck]
                            packages:
                                "osx" "thefuck"
                            cmds:
                                "debian" "pip3 install thefuck"
                                "all" "echo \"eval \$(thefuck --alias)\" >> .env"
                        .
                        [gh-cli]
                            cmds:
                                "debian" "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0"
                                "debian" "sudo apt-add-repository https://cli.github.com/packages"
                                "debian" "sudo apt update"
                            packages:
                                "all" "gh"
                            cmds:
                                "all" "echo \"eval \\"\$(gh completion -s zsh)\\"\" >> .env"
                        .
                        [rust-analyzer]
                            cmds:
                                "all" "cd rust-analyzer && cargo xtask install --server && cd .."
                        .
                        [alacritty]
                            packages:
                                "debian" "cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev python3"
                            cmds:
                                "all" "cd alacritty"
                                "debian" "cargo build --release"
                                "osx" "make app && cp -r target/release/osx/Alacritty.app /Applications/"
                                "all" "infocmp alacritty; if [ $? -ne 0 ]; then sudo tic -xe alacritty,alacritty-direct extra/alacritty.info ; fi"
                                "all" "cd .."
                        .
                        [kde-connect]
                            packages:
                                "debian" "kdeconnect"
                            cmds:
                                "osx" "curl https://raw.githubusercontent.com/KDE/craft/master/setup/CraftBootstrap.py -o setup.py && python3 setup.py --prefix ~/development/tools/craft && rm setup.py"
                                "osx" "cd craft"
                                "osx" "( source ./craft/craftenv.sh; craft extragear/kdeconnect-kde; craft --package extragear/kdeconnect-kde )"
                                "osx" "open -W ./tmp/*.dmg"
                                "osx" "cd .."
                        .
                .
        .
.
